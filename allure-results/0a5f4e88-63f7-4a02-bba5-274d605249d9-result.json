{"name": "test_login_002", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[text()=\"Logout\"]\"}\n  (Session info: chrome=115.0.5790.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF7F8383E62+57250]\n\t(No symbol) [0x00007FF7F82FBC02]\n\t(No symbol) [0x00007FF7F81CE0BB]\n\t(No symbol) [0x00007FF7F820765E]\n\t(No symbol) [0x00007FF7F820774C]\n\t(No symbol) [0x00007FF7F8240267]\n\t(No symbol) [0x00007FF7F82267EF]\n\t(No symbol) [0x00007FF7F823E312]\n\t(No symbol) [0x00007FF7F8226583]\n\t(No symbol) [0x00007FF7F81FCC71]\n\t(No symbol) [0x00007FF7F81FDE54]\n\tGetHandleVerifier [0x00007FF7F8634CF2+2879026]\n\tGetHandleVerifier [0x00007FF7F8686F30+3215472]\n\tGetHandleVerifier [0x00007FF7F867FD4F+3186319]\n\tGetHandleVerifier [0x00007FF7F8415505+652869]\n\t(No symbol) [0x00007FF7F8307518]\n\t(No symbol) [0x00007FF7F83035F4]\n\t(No symbol) [0x00007FF7F83036EC]\n\t(No symbol) [0x00007FF7F82F38E3]\n\tBaseThreadInitThunk [0x00007FFB875C7614+20]\n\tRtlUserThreadStart [0x00007FFB885826B1+33]", "trace": "self = <testcases.test_login.Test_Login object at 0x0000028E6FEC4DD0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"923051a9e2244537a77d4b2285c86a4f\")>\n\n    def test_login_002(self,setup):\n    \n        self.log.info(\" TestCase test_login_002 iS Started \") ;\n        self.log.info(\" Opening The Browser \") ;\n    \n        self.driver=setup ;\n    \n        self.lp=OrangeHRM_login(self.driver) ;\n    \n        self.log.info(\" Entering Username \"+self.username) ;\n        self.lp.enter_username(self.username) ;\n    \n        self.log.info(\" Entering Password \"+self.password) ;\n        self.lp.enter_password(self.password) ;\n    \n        self.log.info(\" Clicking On Login Button \") ;\n        self.lp.click_login_button();\n    \n        self.log.info(\" Checking for Login Status \") ;\n        if ( self.lp.login_status() == True ) :\n            self.log.info(\" Taking Screenshot \") ;\n            self.driver.save_screenshot('D:\\\\PYTHON CT15\\\\OrangeHRM\\\\screenshots\\\\test_login_002_pass.png');\n    \n            self.log.info(\" Clicking On Menu Button \") ;\n            self.lp.click_menu_button();\n    \n            self.log.info(\" Clicking On Logout Button \")\n>           self.lp.click_logout_button();\n\ntestcases\\test_login.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npageobjects\\loginpage.py:32: in click_logout_button\n    self.driver.find_element(*OrangeHRM_login.click_logout).click() ;\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028E7001B010>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7F82F38E3]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB875C7614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB885826B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[text()=\"Logout\"]\"}\nE         (Session info: chrome=115.0.5790.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF7F8383E62+57250]\nE       \t(No symbol) [0x00007FF7F82FBC02]\nE       \t(No symbol) [0x00007FF7F81CE0BB]\nE       \t(No symbol) [0x00007FF7F820765E]\nE       \t(No symbol) [0x00007FF7F820774C]\nE       \t(No symbol) [0x00007FF7F8240267]\nE       \t(No symbol) [0x00007FF7F82267EF]\nE       \t(No symbol) [0x00007FF7F823E312]\nE       \t(No symbol) [0x00007FF7F8226583]\nE       \t(No symbol) [0x00007FF7F81FCC71]\nE       \t(No symbol) [0x00007FF7F81FDE54]\nE       \tGetHandleVerifier [0x00007FF7F8634CF2+2879026]\nE       \tGetHandleVerifier [0x00007FF7F8686F30+3215472]\nE       \tGetHandleVerifier [0x00007FF7F867FD4F+3186319]\nE       \tGetHandleVerifier [0x00007FF7F8415505+652869]\nE       \t(No symbol) [0x00007FF7F8307518]\nE       \t(No symbol) [0x00007FF7F83035F4]\nE       \t(No symbol) [0x00007FF7F83036EC]\nE       \t(No symbol) [0x00007FF7F82F38E3]\nE       \tBaseThreadInitThunk [0x00007FFB875C7614+20]\nE       \tRtlUserThreadStart [0x00007FFB885826B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "e074e876-436b-4791-8f0d-98ff5d4111e0-attachment.txt", "type": "text/plain"}], "start": 1691675935166, "stop": 1691675947963, "uuid": "2f82bef0-c485-46f3-9f22-27eaeefd9144", "historyId": "af88b4543ffa38e2fe7fabb10fdd84b3", "testCaseId": "af88b4543ffa38e2fe7fabb10fdd84b3", "fullName": "testcases.test_login.Test_Login#test_login_002", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "DESKTOP-U7OANNR"}, {"name": "thread", "value": "13112-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}